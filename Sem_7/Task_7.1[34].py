# 7.1[34]: Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. Поскольку разобраться в его кричалках не настолько просто, насколько легко он их придумывает, Вам стоит написать программу. Винни-Пух считает, что ритм есть, если число слогов (т.е. число гласных букв) в каждой фразе стихотворения одинаковое. Фраза может состоять из одного слова, если во фразе несколько слов, то они разделяются дефисами. Фразы отделяются друг от друга пробелами.
# Написать функцию, которая принимает строку текста и проверяет ее ритм (по Винни-Пуху)
# Если ритм есть, функция возвращает True, иначе возвращает False

# Примеры/Тесты:
#     <function_name>("пара-ра-рам рам-пам-папам па-ра-па-дам") -> True
#     <function_name>("пара-ра-рам рам-пум-пупам па-ре-по-дам") -> True
#     <function_name>("пара-ра-рам рам-пуум-пупам па-ре-по-дам") -> False
#     <function_name>("Трам-пара-папам-парам-па-пам-пам-па Пум-пурум-пу-пурум-трам-пам-па") -> False
#     <function_name>("Пам-парам-пурум Пум-пурум-карам") -> True
# Примечание.

# Подумайте об эффективности алгоритма. Какие структуры данных будут более эффективны по скорости.
# Алгоритм должен работать так, чтобы не делать лишних проверок. Подумайте, возможно некоторые проверки не нужны.

# (*) Усложнение.

# Функция имеет параметр, который определяет, надо ли возвращать полную информацию о кол-ве гласных букв в фразах. 
# Эта информация возвращается в виде списка словарей. Каждый элемент списка(словарь) соответствует фразе.

# Примеры/Тесты:
#     <function_name>("пара-ра-рам рам-пам-папам па-ра-па-дам", False) -> True
#     <function_name>("пара-ра-рам рам-пам-папам па-ра-па-дам", True) -> (True, [{'а': 4}, {'а': 4}, {'а': 4}])
#     <function_name>("пара-ра-рам рам-пум-пупам па-ре-по-дам") -> (True, [{'а': 4}, {'а': 2, 'у': 2}, {'а': 2, 'е': 1, 'о': 1}])
#     <function_name>("пара-ра-рам рам-пуум-пупам па-ре-по-дам") -> (False, [{'а': 4}, {'а': 2, 'у': 3}])
#     <function_name>("Трам-пара-папам-парам-па-пам-пам-па Пум-пурум-пу-пурум-трам-пам-па") -> (False, [{'а': 11}, {'у': 6, 'а': 3}])
#     <function_name>("Пам-парам-пурум Пум-пурум-карам") -> (True, [{'а': 3, 'у': 2}, {'у': 3, 'а': 2}])


def rhythm_search(poem):
    vowels = ['а', 'о', 'э', 'е', 'и', 'ы', 'у', 'ё', 'ю', 'я']
    phrase = poem.lower().split()
    res = list()
    for el in phrase:
        count = 0
        for letter in el:
            if letter in vowels:
                count += 1
        res.append(count)
    if len(set(res)) == 1:
        print(True)
    else:
        print(False)

rhythm_search("пара-ра-рам рам-пам-папам па-ра-па-дам")
rhythm_search("пара-ра-рам рам-пум-пупам па-ре-по-дам")
rhythm_search("пара-ра-рам рам-пуум-пупам па-ре-по-дам")
rhythm_search("Трам-пара-папам-парам-па-пам-пам-па Пум-пурум-пу-пурум-трам-пам-па")
rhythm_search("Пам-парам-пурум Пум-пурум-карам")


def rhythm_search(poem):
    phrase = poem.lower().split()
    f = lambda el: sum(1 for letter in el if letter in 'аоэеиыуёюя')
    tmp = f(phrase[0])
    if all([f(el) == tmp for el in phrase]):
        return True
    return False

print(rhythm_search("пара-ра-рам рам-пам-папам па-ра-па-дам"))
print(rhythm_search("пара-ра-рам рам-пум-пупам па-ре-по-дам"))
print(rhythm_search("пара-ра-рам рам-пуум-пупам па-ре-по-дам"))
print(rhythm_search("Трам-пара-папам-парам-па-пам-пам-па Пум-пурум-пу-пурум-трам-пам-па"))
print(rhythm_search("Пам-парам-пурум Пум-пурум-карам"))


# (*) Усложнение.

def rhythm_search(poem, condition):
    vowels = 'аоэеиыуёюя'
    phrase = poem.lower().split()
    res = list()
    list_dict_vowels = list()
    for el in phrase:
        count = 0
        dict_vowels = {}
        for letter in el:
            if letter in vowels:
                count += 1      
                dict_vowels[letter] = el.count(letter)  
        res.append(count)
        list_dict_vowels.append(dict_vowels)
    if condition == True:
        if len(set(res)) == 1:
            print(f'True, {list_dict_vowels}')
        else:
            print(f'False, {list_dict_vowels}')
    else:
        if len(set(res)) == 1:
            print(True)
        else:
            print(False)

rhythm_search("пара-ра-рам рам-пам-папам па-ра-па-дам", True)
rhythm_search("пара-ра-рам рам-пум-пупам па-ре-по-дам", True)
rhythm_search("пара-ра-рам рам-пуум-пупам па-ре-по-дам", True)
rhythm_search("Трам-пара-папам-парам-па-пам-пам-па Пум-пурум-пу-пурум-трам-пам-па", True)
rhythm_search("Пам-парам-пурум Пум-пурум-карам", True)           
                 
rhythm_search("пара-ра-рам рам-пам-папам па-ра-па-дам", False)
rhythm_search("пара-ра-рам рам-пум-пупам па-ре-по-дам", False)
rhythm_search("пара-ра-рам рам-пуум-пупам па-ре-по-дам", False)
rhythm_search("Трам-пара-папам-парам-па-пам-пам-па Пум-пурум-пу-пурум-трам-пам-па", False)
rhythm_search("Пам-парам-пурум Пум-пурум-карам", False)
